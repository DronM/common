<?phpfunction send_sms($host, $port, $login, $password, $phone, $text, $sender = false, $wapurl = false ){	//$host_ip = gethostbyname($host);    $fp = fsockopen($host, $port, $errno, $errstr);    if (!$fp) {        return "errno: $errno \nerrstr: $errstr\n";    }    fwrite($fp, "GET /messages/v2/send/" .        "?phone=" . rawurlencode($phone) .        "&text=" . rawurlencode($text) .        ($sender ? "&sender=" . rawurlencode($sender) : "") .        ($wapurl ? "&wapurl=" . rawurlencode($wapurl) : "") .        "  HTTP/1.0\n");    fwrite($fp, "Host: " . $host . "\r\n");    if ($login != "") {        fwrite($fp, "Authorization: Basic " .            base64_encode($login. ":" . $password) . "\n");    }    fwrite($fp, "\n");    $response = "";    while(!feof($fp)) {        $response .= fread($fp, 1);    }    fclose($fp);    list($other, $responseBody) = explode("\r\n\r\n", $response, 2);    return $responseBody;} function status_sms($host, $port, $login, $password, $sms_id){	//$host_ip = gethostbyname($host);    $fp = fsockopen($host, $port, $errno, $errstr);    if (!$fp) {        return "errno: $errno \nerrstr: $errstr\n";    }    fwrite($fp, "GET /messages/v2/status/" .        "?id=" . $sms_id .        "  HTTP/1.0\n");    fwrite($fp, "Host: " . $host . "\r\n");    if ($login != "") {        fwrite($fp, "Authorization: Basic " .            base64_encode($login. ":" . $password) . "\n");    }    fwrite($fp, "\n");    $response = "";    while(!feof($fp)) {        $response .= fread($fp, 1);    }    fclose($fp);    list($other, $responseBody) = explode("\r\n\r\n", $response, 2);    return $responseBody;}class SMSService {	//"54.246.93.125";//	const HOST="api.smsfeedback.ru";	const PORT=80;	const RESP_DELIM=';';	const RESP_SENT = 'delivered';	const RESP_SMS_ACC = 'accepted';		private $login;	private $pwd;		public function __construct($login,$pwd){		$this->login = $login;		$this->pwd = $pwd;	}		public function send($phone,$text,$sign,$test=FALSE){				if (substr($phone,0,1)=='8'){			$phone_cel = substr($phone,1);		}		else if (substr($phone,0,1)=='7'){			$phone_cel = substr($phone,1);		}				else{			$phone_cel = $phone;		}		$phone_cel = str_replace('-','',$phone_cel);		$phone_cel = str_replace('_','',$phone_cel);		$phone_cel = '7'.str_replace('-','',$phone_cel);				$ext = Array(900,901,902,903,904,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,936,937,938,939,941,950,951,952,953,954,955,956,958,960,961,962,963,964,965,966,967,968,969,970,971,980,981,982,983,984,985,987,988,989,991,992,993,994,995,996,997,999);				if (strlen($phone_cel)!=11		||(!in_array(substr($phone_cel,1,3),$ext))		){			throw new Exception('Неверный номер для SMS сообщения '.$phone_cel);		}		if ($test){			$res_ar = array(SMSService::RESP_SMS_ACC,'12345');		}		else{			$res_ar = explode(';',send_sms(SMSService::HOST,SMSService::PORT,				$this->login, $this->pwd,				$phone_cel,$text,$sign)			);		}		if (count($res_ar)<2){			throw new Exception('Неверный ответ сервера SMS.');				}				if ($res_ar[0]!=SMSService::RESP_SMS_ACC){			throw new Exception('Сообщение не принято для отправки. '.$phone_cel.' '.$res_ar[0].' '.$res_ar[1]);		}				return $res_ar[1];	}	public function get_delivered($smsId){		$resp_ar = explode(SMSService::RESP_DELIM,			status_sms(SMSService::HOST,SMSService::PORT,$this->login,$this->pwd,$smsId)		);		if (count($resp_ar)>=2){			$res = ($resp_ar[1]==SMSService::RESP_SENT);		}		else{			$res = FALSE;		}				return $res;	}	}?>